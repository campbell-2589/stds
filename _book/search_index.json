[["geometric-methods.html", "Chapter 7 Geometric Methods 7.1 Poincare Embedding 7.2 Multirelational", " Chapter 7 Geometric Methods 7.1 Poincare Embedding The Poincaré Embedding is concerned with the problem of learning hierarchical structure on the dataset. Phylogenetic tree or the tree of hypernymy are the examples of hierarchical structure dataset. The embedding space is a Poincaré ball, which is an unit ball equipped with poincaré distance. An advantage using Poincaré space compared to the Euclidean space as embedding space is that this space preserve tree-shaped structure well in relatively low dimension. This is because poincaré distance is intuitively continuous version of distance on tree-shaped dataset. We can take advantage of this property to provide efficient embeddings with comparably less dimensionality. See [https://github.com/hwchang1201/poincare.embeddings/] (Nickel and Kiela 2017) (Nickel and Kiela 2018) install.packages(&quot;remotes&quot;) ## Installing package into &#39;/home/bruce/R/x86_64-pc-linux-gnu-library/4.1&#39; ## (as &#39;lib&#39; is unspecified) remotes::install_github(&quot;hwchang1201/poincare.embeddings&quot;, upgrade = &quot;never&quot;) ## Skipping install of &#39;poincare.embeddings&#39; from a github remote, the SHA1 (7fd455e0) has not changed since last install. ## Use `force = TRUE` to force installation install.packages(&#39;data.tree&#39;) ## Installing package into &#39;/home/bruce/R/x86_64-pc-linux-gnu-library/4.1&#39; ## (as &#39;lib&#39; is unspecified) library(yaml) library(data.tree) # defining tree structured dataset. acme_treeDataset &lt;- Node$new(&quot;Acme Inc.&quot;) accounting &lt;- acme_treeDataset$AddChild(&quot;Accounting&quot;) software &lt;- accounting$AddChild(&quot;New Software&quot;) standards &lt;- accounting$AddChild(&quot;New Accounting Standards&quot;) research &lt;- acme_treeDataset$AddChild(&quot;Research&quot;) newProductLine &lt;- research$AddChild(&quot;New Product Line&quot;) newLabs &lt;- research$AddChild(&quot;New Labs&quot;) it &lt;- acme_treeDataset$AddChild(&quot;IT&quot;) outsource &lt;- it$AddChild(&quot;Outsource&quot;) agile &lt;- it$AddChild(&quot;Go agile&quot;) goToR &lt;- it$AddChild(&quot;Switch to R&quot;) print(acme_treeDataset) ## levelName ## 1 Acme Inc. ## 2 ¦--Accounting ## 3 ¦ ¦--New Software ## 4 ¦ °--New Accounting Standards ## 5 ¦--Research ## 6 ¦ ¦--New Product Line ## 7 ¦ °--New Labs ## 8 °--IT ## 9 ¦--Outsource ## 10 ¦--Go agile ## 11 °--Switch to R # loading package &quot;poincare.embeddings&quot; library(poincare.embeddings) # use example dataset # 1. use &quot;toy&quot; toy_yaml &lt;- yaml::yaml.load(toy) toy_tree &lt;- data.tree::as.Node(toy_yaml) emb &lt;- poincareEmbeddings(toy_tree, theta_dim = 2, N_epoch = 200, lr = 0.05, n_neg = 10) # 2. use &quot;statistics&quot; statistics_yaml &lt;- yaml::yaml.load(statistics) statistics_tree &lt;- data.tree::as.Node(statistics_yaml) emb &lt;- poincareEmbeddings(statistics_tree, theta_dim = 2, N_epoch = 200, lr = 0.05, n_neg = 10) # 3. use &quot;statistics_adv&quot; statistics_adv_yaml &lt;- yaml::yaml.load(statistics_adv) statistics_adv_tree &lt;- data.tree::as.Node(statistics_adv_yaml) emb &lt;- poincareEmbeddings(statistics_adv_tree, theta_dim = 2, N_epoch = 200, lr = 0.05, n_neg = 10) print(paste(&quot;The ranking of the poincare embedding :&quot;, emb$rank)) ## [1] &quot;The ranking of the poincare embedding : 4.46666666666667&quot; print(paste(&quot;The mean average precision of the poincare embedding :&quot;, emb$map)) ## [1] &quot;The mean average precision of the poincare embedding : 0.725401676909986&quot; 7.2 Multirelational https://github.com/ibalazevic/multirelational-poincare GeomStats https://geomstats.github.io/geomstats.github.io/05_embedding_graph_structured_data_h2.html References "]]
